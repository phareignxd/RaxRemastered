local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local TextService = game:GetService("TextService")

local CORRECT_KEY = "RAXREMASTERED"
local DISCORD_LINK = "https://discord.gg/TGjSwUbucf"
local IS_MOBILE = UserInputService.TouchEnabled

local SPECIAL_USERS = {
    "phashadower",
    "bc_baconthe900",
    "XEndisz",
    "Godhung17"
}

if not setclipboard then
    setclipboard = function(text)
        if syn and syn.write_clipboard then
            syn.write_clipboard(text)
        elseif writeclipboard then
            writeclipboard(text)
        elseif toclipboard then
            toclipboard(text)
        else
            local clip = Instance.new("TextBox")
            clip.Text = text
            clip.Parent = game:GetService("CoreGui")
            clip:CaptureFocus()
            clip:SelectAll()
            task.wait()
            keypress(0x11)
            keypress(0x43)
            keyrelease(0x43)
            keyrelease(0x11)
            clip:Destroy()
        end
    end
end

local function createNotification(title, message, duration)
    local NotificationGui = Instance.new("ScreenGui")
    NotificationGui.Name = "RAXNotification"
    NotificationGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    NotificationGui.ResetOnSpawn = false
    
    local NotifFrame = Instance.new("Frame")
    NotifFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
    NotifFrame.BackgroundTransparency = 0.2
    NotifFrame.BorderSizePixel = 0
    NotifFrame.Position = UDim2.new(1, 20, 0.1, 0)
    NotifFrame.Size = UDim2.new(0, 300, 0, 80)
    NotifFrame.Parent = NotificationGui
    
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 10)
    UICorner.Parent = NotifFrame
    
    local UIStroke = Instance.new("UIStroke")
    UIStroke.Color = Color3.fromRGB(80, 120, 255)
    UIStroke.Thickness = 2
    UIStroke.Parent = NotifFrame
    
    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.BackgroundTransparency = 1
    TitleLabel.Position = UDim2.new(0, 15, 0, 10)
    TitleLabel.Size = UDim2.new(1, -30, 0, 25)
    TitleLabel.Font = Enum.Font.GothamBold
    TitleLabel.Text = title
    TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    TitleLabel.TextSize = 16
    TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
    TitleLabel.Parent = NotifFrame
    
    local MessageLabel = Instance.new("TextLabel")
    MessageLabel.BackgroundTransparency = 1
    MessageLabel.Position = UDim2.new(0, 15, 0, 40)
    MessageLabel.Size = UDim2.new(1, -30, 0, 30)
    MessageLabel.Font = Enum.Font.Gotham
    MessageLabel.Text = message
    MessageLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    MessageLabel.TextSize = 14
    MessageLabel.TextXAlignment = Enum.TextXAlignment.Left
    MessageLabel.TextWrapped = true
    MessageLabel.Parent = NotifFrame
    
    local IconImage = Instance.new("ImageLabel")
    IconImage.BackgroundTransparency = 1
    IconImage.Position = UDim2.new(0.05, 0, 0.5, -15)
    IconImage.Size = UDim2.new(0, 30, 0, 30)
    IconImage.Image = "rbxassetid://7733658504"
    IconImage.ImageColor3 = Color3.fromRGB(80, 120, 255)
    IconImage.Parent = NotifFrame
    
    if game:GetService("RunService"):IsStudio() then
        NotificationGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")
    else
        NotificationGui.Parent = game:GetService("CoreGui")
    end
    
    TweenService:Create(NotifFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = UDim2.new(1, -320, 0.1, 0)}):Play()
    
    task.delay(duration or 3, function()
        local fadeTween = TweenService:Create(NotifFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = UDim2.new(1, 20, 0.1, 0)})
        fadeTween:Play()
        fadeTween.Completed:Connect(function()
            NotificationGui:Destroy()
        end)
    end)
    
    return NotificationGui
end

local function checkSpecialUser()
    local playerName = Players.LocalPlayer.Name
    
    for _, username in ipairs(SPECIAL_USERS) do
        if playerName == username then
            createNotification("Premium User Detected", "Welcome " .. playerName .. "! Premium features unlocked.", 5)
            return true
        end
    end
    
    return false
end

local function detectSpecialUsers()
    for _, player in ipairs(Players:GetPlayers()) do
        for _, username in ipairs(SPECIAL_USERS) do
            if player.Name == username and player.Name ~= Players.LocalPlayer.Name then
                createNotification("Special User Alert", username .. " is in your game!", 5)
            end
        end
    end
    
    Players.PlayerAdded:Connect(function(player)
        for _, username in ipairs(SPECIAL_USERS) do
            if player.Name == username then
                createNotification("Special User Alert", username .. " has joined the game!", 5)
            end
        end
    end)
end

local SettingsModule = {
    CurrentSettings = {
        Theme = "Default",
        EffectsEnabled = true,
        NotificationsEnabled = true,
        MusicVolume = 0.5,
        SFXVolume = 0.8,
        FPSBoostEnabled = false
    },
    
    Themes = {
        Default = {
            Background = Color3.fromRGB(20, 20, 30),
            SecondaryBackground = Color3.fromRGB(25, 25, 35),
            Text = Color3.fromRGB(200, 220, 255),
            AccentColor = Color3.fromRGB(80, 120, 255),
            ButtonColor = Color3.fromRGB(30, 30, 40)
        },
        Dark = {
            Background = Color3.fromRGB(15, 15, 20),
            SecondaryBackground = Color3.fromRGB(20, 20, 25),
            Text = Color3.fromRGB(220, 220, 220),
            AccentColor = Color3.fromRGB(100, 100, 255),
            ButtonColor = Color3.fromRGB(25, 25, 30)
        },
        Light = {
            Background = Color3.fromRGB(220, 220, 230),
            SecondaryBackground = Color3.fromRGB(200, 200, 210),
            Text = Color3.fromRGB(40, 40, 60),
            AccentColor = Color3.fromRGB(80, 100, 200),
            ButtonColor = Color3.fromRGB(180, 180, 190)
        },
        Gaming = {
            Background = Color3.fromRGB(20, 20, 30),
            SecondaryBackground = Color3.fromRGB(25, 25, 35),
            Text = Color3.fromRGB(255, 255, 255),
            AccentColor = Color3.fromRGB(255, 0, 100),
            ButtonColor = Color3.fromRGB(40, 40, 50)
        }
    },
    
    SaveSettings = function(self)
        local HttpService = game:GetService("HttpService")
        pcall(function()
            local encoded = HttpService:JSONEncode(self.CurrentSettings)
            Players.LocalPlayer:SetAttribute("RAXSettings", encoded)
        end)
    end,
    
    LoadSettings = function(self)
        local HttpService = game:GetService("HttpService")
        pcall(function()
            if Players.LocalPlayer:GetAttribute("RAXSettings") then
                local settings = HttpService:JSONDecode(Players.LocalPlayer:GetAttribute("RAXSettings"))
                for key, value in pairs(settings) do
                    self.CurrentSettings[key] = value
                end
            end
        end)
    end,
    
    ApplyTheme = function(self, themeName)
        if self.Themes[themeName] then
            self.CurrentSettings.Theme = themeName
            self:SaveSettings()
            createNotification("Theme Changed", "Applied "..themeName.." theme", 2)
        end
    end,
    
    ApplyFPSBoost = function(self, enabled)
        self.CurrentSettings.FPSBoostEnabled = enabled
        self:SaveSettings()
        
        if enabled then
            local ToDisable = {
                Textures = true,
                VisualEffects = true,
                Parts = true,
                Particles = true,
                Sky = true
            }
            
            local ToEnable = {
                FullBright = false
            }
            
            local Stuff = {}
            
            for _, v in next, game:GetDescendants() do
                if ToDisable.Parts then
                    if v:IsA("Part") or v:IsA("Union") or v:IsA("BasePart") then
                        v.Material = Enum.Material.SmoothPlastic
                        table.insert(Stuff, 1, v)
                    end
                end
                
                if ToDisable.Particles then
                    if v:IsA("ParticleEmitter") or v:IsA("Smoke") or v:IsA("Explosion") or v:IsA("Sparkles") or v:IsA("Fire") then
                        v.Enabled = false
                        table.insert(Stuff, 1, v)
                    end
                end
                
                if ToDisable.VisualEffects then
                    if v:IsA("BloomEffect") or v:IsA("BlurEffect") or v:IsA("DepthOfFieldEffect") or v:IsA("SunRaysEffect") then
                        v.Enabled = false
                        table.insert(Stuff, 1, v)
                    end
                end
                
                if ToDisable.Textures then
                    if v:IsA("Decal") or v:IsA("Texture") then
                        v.Texture = ""
                        table.insert(Stuff, 1, v)
                    end
                end
                
                if ToDisable.Sky then
                    if v:IsA("Sky") then
                        v.Parent = nil
                        table.insert(Stuff, 1, v)
                    end
                end
            end
            
            if ToEnable.FullBright then
                local Lighting = game:GetService("Lighting")
                Lighting.FogColor = Color3.fromRGB(255, 255, 255)
                Lighting.FogEnd = math.huge
                Lighting.FogStart = math.huge
                Lighting.Ambient = Color3.fromRGB(255, 255, 255)
                Lighting.Brightness = 5
                Lighting.ColorShift_Bottom = Color3.fromRGB(255, 255, 255)
                Lighting.ColorShift_Top = Color3.fromRGB(255, 255, 255)
                Lighting.OutdoorAmbient = Color3.fromRGB(255, 255, 255)
                Lighting.Outlines = true
            end
            
            createNotification("FPS Boost", "Enabled FPS Boost (Disabled "..#Stuff.." effects)", 3)
        else
            createNotification("FPS Boost", "Disabled FPS Boost", 3)
        end
    end
}

local function CreateSafeZone()
    local SafeZone = Instance.new("Part")
    SafeZone.Name = "SafeZone"
    SafeZone.Anchored = true
    SafeZone.Size = Vector3.new(1000, 1, 1000)
    SafeZone.Position = Vector3.new(0, -500, 0)
    SafeZone.BrickColor = BrickColor.new("Really blue")
    SafeZone.Transparency = 0.5
    SafeZone.Parent = workspace
    
    local function teleportBelowMap()
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
        humanoidRootPart.CFrame = CFrame.new(0, -490, 0)
    end
    
    teleportBelowMap()
    createNotification("SafeZone", "Created SafeZone below map", 3)
end

local function CreateLoadingScreen(message)
    local LoadingGUI = Instance.new("ScreenGui")
    LoadingGUI.Name = "RAXLoadingScreen"
    LoadingGUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    LoadingGUI.ResetOnSpawn = false

    local MainFrame = Instance.new("Frame")
    MainFrame.Size = UDim2.new(0, 400, 0, 200)
    MainFrame.Position = UDim2.new(0.5, -200, 0.5, -100)
    MainFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 25)
    MainFrame.BackgroundTransparency = 0.1
    MainFrame.Parent = LoadingGUI
    
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0.1, 0)
    UICorner.Parent = MainFrame

    local UIStroke = Instance.new("UIStroke")
    UIStroke.Color = Color3.fromRGB(80, 120, 255)
    UIStroke.Thickness = 3
    UIStroke.Parent = MainFrame

    local Gradient = Instance.new("UIGradient")
    Gradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(80, 120, 255)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(120, 160, 255))
    }
    Gradient.Rotation = 45
    Gradient.Parent = UIStroke

    local Logo = Instance.new("ImageLabel")
    Logo.BackgroundTransparency = 1
    Logo.Size = UDim2.new(0, 80, 0, 80)
    Logo.Position = UDim2.new(0.5, -40, 0.2, 0)
    Logo.Image = "rbxassetid://7072706620"
    Logo.Parent = MainFrame
    
    TweenService:Create(Logo, TweenInfo.new(2, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1), {
        Rotation = 360
    }):Play()

    local LoadingText = Instance.new("TextLabel")
    LoadingText.Text = message or "RAX REMASTERED LOADING..."
    LoadingText.Font = Enum.Font.GothamBold
    LoadingText.TextColor3 = Color3.fromRGB(200, 220, 255)
    LoadingText.TextSize = 18
    LoadingText.BackgroundTransparency = 1
    LoadingText.Size = UDim2.new(0.8, 0, 0.2, 0)
    LoadingText.Position = UDim2.new(0.1, 0, 0.6, 0)
    LoadingText.Parent = MainFrame

    local ProgressBar = Instance.new("Frame")
    ProgressBar.Size = UDim2.new(0.8, 0, 0.05, 0)
    ProgressBar.Position = UDim2.new(0.1, 0, 0.8, 0)
    ProgressBar.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
    ProgressBar.Parent = MainFrame

    local ProgressBarCorner = Instance.new("UICorner")
    ProgressBarCorner.CornerRadius = UDim.new(0.5, 0)
    ProgressBarCorner.Parent = ProgressBar

    local ProgressFill = Instance.new("Frame")
    ProgressFill.Size = UDim2.new(0, 0, 1, 0)
    ProgressFill.BackgroundColor3 = Color3.fromRGB(80, 160, 255)
    ProgressFill.Parent = ProgressBar

    local ProgressFillCorner = Instance.new("UICorner")
    ProgressFillCorner.CornerRadius = UDim.new(0.5, 0)
    ProgressFillCorner.Parent = ProgressFill
    
    local ProgressGlow = Instance.new("ImageLabel")
    ProgressGlow.BackgroundTransparency = 1
    ProgressGlow.Size = UDim2.new(0.1, 0, 3, 0)
    ProgressGlow.Position = UDim2.new(0, 0, -1, 0)
    ProgressGlow.Image = "rbxassetid://6947150722"
    ProgressGlow.ImageColor3 = Color3.fromRGB(120, 170, 255)
    ProgressGlow.ImageTransparency = 0.5
    ProgressGlow.Parent = ProgressFill
    
    local loadingAnimation = TweenService:Create(
        ProgressFill, 
        TweenInfo.new(2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), 
        {Size = UDim2.new(1, 0, 1, 0)}
    )
    
    local glowAnimation = TweenService:Create(
        ProgressGlow, 
        TweenInfo.new(2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), 
        {Position = UDim2.new(0.95, 0, -1, 0)}
    )
    
    loadingAnimation:Play()
    glowAnimation:Play()

    if game:GetService("RunService"):IsStudio() then
        LoadingGUI.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")
    else
        LoadingGUI.Parent = game:GetService("CoreGui")
    end

    return LoadingGUI
end

local function CreateSettingsUI(parentFrame)
    local SettingsFrame = Instance.new("Frame")
    SettingsFrame.Name = "SettingsFrame"
    SettingsFrame.BackgroundTransparency = 1
    SettingsFrame.Size = UDim2.new(1, 0, 1, 0)
    SettingsFrame.Parent = parentFrame
    
    local SettingsTitle = Instance.new("TextLabel")
    SettingsTitle.Text = "SETTINGS"
    SettingsTitle.Font = Enum.Font.GothamBold
    SettingsTitle.TextColor3 = Color3.fromRGB(200, 220, 255)
    SettingsTitle.TextSize = 20
    SettingsTitle.BackgroundTransparency = 1
    SettingsTitle.Size = UDim2.new(1, -20, 0, 40)
    SettingsTitle.Position = UDim2.new(0, 10, 0, 0)
    SettingsTitle.Parent = SettingsFrame
    
    local ThemeSelector = Instance.new("Frame")
    ThemeSelector.BackgroundTransparency = 1
    ThemeSelector.Size = UDim2.new(1, -20, 0, 120)
    ThemeSelector.Position = UDim2.new(0, 10, 0, 50)
    ThemeSelector.Parent = SettingsFrame
    
    local ThemeTitle = Instance.new("TextLabel")
    ThemeTitle.Text = "Theme:"
    ThemeTitle.Font = Enum.Font.Gotham
    ThemeTitle.TextColor3 = Color3.fromRGB(200, 200, 255)
    ThemeTitle.TextSize = 16
    ThemeTitle.BackgroundTransparency = 1
    ThemeTitle.Size = UDim2.new(1, 0, 0, 20)
    ThemeTitle.TextXAlignment = Enum.TextXAlignment.Left
    ThemeTitle.Parent = ThemeSelector
    
    local ThemeButtons = Instance.new("Frame")
    ThemeButtons.BackgroundTransparency = 1
    ThemeButtons.Size = UDim2.new(1, 0, 0, 80)
    ThemeButtons.Position = UDim2.new(0, 0, 0, 30)
    ThemeButtons.Parent = ThemeSelector
    
    local ThemeListLayout = Instance.new("UIListLayout")
    ThemeListLayout.FillDirection = Enum.FillDirection.Horizontal
    ThemeListLayout.Padding = UDim.new(0, 10)
    ThemeListLayout.Parent = ThemeButtons
    
    for themeName, themeData in pairs(SettingsModule.Themes) do
        local ThemeButton = Instance.new("TextButton")
        ThemeButton.Text = themeName
        ThemeButton.Font = Enum.Font.GothamBold
        ThemeButton.TextColor3 = themeData.Text
        ThemeButton.TextSize = 14
        ThemeButton.BackgroundColor3 = themeData.ButtonColor
        ThemeButton.Size = UDim2.new(0.2, 0, 1, 0)
        ThemeButton.Parent = ThemeButtons
        
        local UICorner = Instance.new("UICorner")
        UICorner.CornerRadius = UDim.new(0.1, 0)
        UICorner.Parent = ThemeButton
        
        ThemeButton.MouseButton1Click:Connect(function()
            SettingsModule:ApplyTheme(themeName)
        end)
    end
    
    local EffectsToggle = Instance.new("Frame")
    EffectsToggle.BackgroundTransparency = 1
    EffectsToggle.Size = UDim2.new(1, -20, 0, 40)
    EffectsToggle.Position = UDim2.new(0, 10, 0, 180)
    EffectsToggle.Parent = SettingsFrame
    
    local EffectsLabel = Instance.new("TextLabel")
    EffectsLabel.Text = "Enable Effects:"
    EffectsLabel.Font = Enum.Font.Gotham
    EffectsLabel.TextColor3 = Color3.fromRGB(200, 200, 255)
    EffectsLabel.TextSize = 16
    EffectsLabel.BackgroundTransparency = 1
    EffectsLabel.Size = UDim2.new(0.5, 0, 1, 0)
    EffectsLabel.TextXAlignment = Enum.TextXAlignment.Left
    EffectsLabel.Parent = EffectsToggle
    
    local ToggleButton = Instance.new("TextButton")
    ToggleButton.Text = SettingsModule.CurrentSettings.EffectsEnabled and "ON" or "OFF"
    ToggleButton.Font = Enum.Font.GothamBold
    ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    ToggleButton.TextSize = 14
    ToggleButton.BackgroundColor3 = SettingsModule.CurrentSettings.EffectsEnabled and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(200, 0, 0)
    ToggleButton.Size = UDim2.new(0.2, 0, 0.8, 0)
    ToggleButton.Position = UDim2.new(0.8, 0, 0.1, 0)
    ToggleButton.Parent = EffectsToggle
    
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0.1, 0)
    UICorner.Parent = ToggleButton
    
    ToggleButton.MouseButton1Click:Connect(function()
        SettingsModule.CurrentSettings.EffectsEnabled = not SettingsModule.CurrentSettings.EffectsEnabled
        ToggleButton.Text = SettingsModule.CurrentSettings.EffectsEnabled and "ON" or "OFF"
        ToggleButton.BackgroundColor3 = SettingsModule.CurrentSettings.EffectsEnabled and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(200, 0, 0)
        SettingsModule:SaveSettings()
    end)
    
    local FPSToggle = Instance.new("Frame")
    FPSToggle.BackgroundTransparency = 1
    FPSToggle.Size = UDim2.new(1, -20, 0, 40)
    FPSToggle.Position = UDim2.new(0, 10, 0, 230)
    FPSToggle.Parent = SettingsFrame
    
    local FPSLabel = Instance.new("TextLabel")
    FPSLabel.Text = "FPS Boost:"
    FPSLabel.Font = Enum.Font.Gotham
    FPSLabel.TextColor3 = Color3.fromRGB(200, 200, 255)
    FPSLabel.TextSize = 16
    FPSLabel.BackgroundTransparency = 1
    FPSLabel.Size = UDim2.new(0.5, 0, 1, 0)
    FPSLabel.TextXAlignment = Enum.TextXAlignment.Left
    FPSLabel.Parent = FPSToggle
    
    local FPSButton = Instance.new("TextButton")
    FPSButton.Text = SettingsModule.CurrentSettings.FPSBoostEnabled and "ON" or "OFF"
    FPSButton.Font = Enum.Font.GothamBold
    FPSButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    FPSButton.TextSize = 14
    FPSButton.BackgroundColor3 = SettingsModule.CurrentSettings.FPSBoostEnabled and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(200, 0, 0)
    FPSButton.Size = UDim2.new(0.2, 0, 0.8, 0)
    FPSButton.Position = UDim2.new(0.8, 0, 0.1, 0)
    FPSButton.Parent = FPSToggle
    
    local FPSCorner = Instance.new("UICorner")
    FPSCorner.CornerRadius = UDim.new(0.1, 0)
    FPSCorner.Parent = FPSButton
    
    FPSButton.MouseButton1Click:Connect(function()
        SettingsModule:ApplyFPSBoost(not SettingsModule.CurrentSettings.FPSBoostEnabled)
        FPSButton.Text = SettingsModule.CurrentSettings.FPSBoostEnabled and "ON" or "OFF"
        FPSButton.BackgroundColor3 = SettingsModule.CurrentSettings.FPSBoostEnabled and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(200, 0, 0)
    end)
    
    return SettingsFrame
end

local function CreateMainGUI()
    local loadingScreen = CreateLoadingScreen()
    task.wait(2.1)
    loadingScreen:Destroy()
    
loadstring(game:HttpGet("https://pastefy.app/mug2j6Hz/raw", true))()

    local ChaosGUI = Instance.new("ScreenGui")
    ChaosGUI.Name = "RAX_Remastered_Hub"
    ChaosGUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    ChaosGUI.ResetOnSpawn = false

    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
    MainFrame.Size = IS_MOBILE and UDim2.new(0.95, 0, 0.85, 0) or UDim2.new(0, 600, 0, 450)
    MainFrame.Position = UDim2.new(0.5, -MainFrame.AbsoluteSize.X/2, 0.5, -MainFrame.AbsoluteSize.Y/2)
    MainFrame.Parent = ChaosGUI

    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0.05, 0)
    UICorner.Parent = MainFrame

    local UIStroke = Instance.new("UIStroke")
    UIStroke.Color = Color3.fromRGB(80, 120, 255)
    UIStroke.Thickness = 3
    UIStroke.Parent = MainFrame

    local Gradient = Instance.new("UIGradient")
    Gradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(80, 120, 255)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(120, 160, 255))
    }
    Gradient.Rotation = 90
    Gradient.Parent = UIStroke

    local Header = Instance.new("Frame")
    Header.Name = "Header"
    Header.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
    Header.Size = UDim2.new(1, 0, 0, 50)
    Header.Position = UDim2.new(0, 0, 0, 0)
    Header.Parent = MainFrame

    local HeaderCorner = Instance.new("UICorner")
    HeaderCorner.CornerRadius = UDim.new(0, 0)
    HeaderCorner.Parent = Header

    local Title = Instance.new("TextLabel")
    Title.Text = "RAX REMASTERED HUB"
    Title.Font = Enum.Font.GothamBold
    Title.TextColor3 = Color3.fromRGB(200, 220, 255)
    Title.TextSize = IS_MOBILE and 18 or 20
    Title.BackgroundTransparency = 1
    Title.Size = UDim2.new(0.6, 0, 1, 0)
    Title.Position = UDim2.new(0.2, 0, 0, 0)
    Title.Parent = Header

    local SettingsButton = Instance.new("ImageButton")
    SettingsButton.BackgroundTransparency = 1
    SettingsButton.Size = UDim2.new(0, 30, 0, 30)
    SettingsButton.Position = UDim2.new(0.05, 0, 0.5, -15)
    SettingsButton.Image = "rbxassetid://3926307971"
    SettingsButton.ImageRectOffset = Vector2.new(324, 124)
    SettingsButton.ImageRectSize = Vector2.new(36, 36)
    SettingsButton.ImageColor3 = Color3.fromRGB(200, 220, 255)
    SettingsButton.Parent = Header

    local CloseButton = Instance.new("TextButton")
    CloseButton.Text = "X"
    CloseButton.Font = Enum.Font.GothamBold
    CloseButton.TextColor3 = Color3.fromRGB(255, 100, 100)
    CloseButton.TextSize = 18
    CloseButton.BackgroundTransparency = 1
    CloseButton.Size = UDim2.new(0, 50, 1, 0)
    CloseButton.Position = UDim2.new(1, -50, 0, 0)
    CloseButton.Parent = Header

    local OpenButton = Instance.new("TextButton")
    OpenButton.Name = "OpenButton"
    OpenButton.Text = "Open"
    OpenButton.Font = Enum.Font.GothamBold
    OpenButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    OpenButton.TextSize = 14
    OpenButton.BackgroundColor3 = Color3.fromRGB(80, 120, 255)
    OpenButton.Size = UDim2.new(0, 100, 0, 40)
    OpenButton.Position = UDim2.new(0.5, -50, 0.5, -20)
    OpenButton.Visible = false
    OpenButton.Parent = ChaosGUI

    local OpenButtonCorner = Instance.new("UICorner")
    OpenButtonCorner.CornerRadius = UDim.new(0.2, 0)
    OpenButtonCorner.Parent = OpenButton

    local openDragging = false
    local openDragInput = nil
    local openDragStart = nil
    local openStartPos = nil

    local function updateOpenButton(input)
        local delta = input.Position - openDragStart
        OpenButton.Position = UDim2.new(openStartPos.X.Scale, openStartPos.X.Offset + delta.X, 
                                     openStartPos.Y.Scale, openStartPos.Y.Offset + delta.Y)
    end

    OpenButton.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            openDragging = true
            openDragStart = input.Position
            openStartPos = OpenButton.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    openDragging = false
                end
            end)
        end
    end)

    OpenButton.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            openDragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input == openDragInput and openDragging then
            updateOpenButton(input)
        end
    end)

    CloseButton.MouseButton1Click:Connect(function()
        MainFrame.Visible = false
        OpenButton.Visible = true
    end)

    OpenButton.MouseButton1Click:Connect(function()
        MainFrame.Visible = true
        OpenButton.Visible = false
    end)

    local TabFrame = Instance.new("Frame")
    TabFrame.Name = "TabSystem"
    TabFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
    TabFrame.Size = UDim2.new(0, 150, 1, -50)
    TabFrame.Position = UDim2.new(0, 0, 0, 50)
    TabFrame.Parent = MainFrame

    local TabList = Instance.new("ScrollingFrame")
    TabList.Name = "TabList"
    TabList.BackgroundTransparency = 1
    TabList.Size = UDim2.new(1, 0, 1, 0)
    TabList.CanvasSize = UDim2.new(0, 0, 0, 0)
    TabList.AutomaticCanvasSize = Enum.AutomaticSize.Y
    TabList.ScrollBarThickness = 4
    TabList.Parent = TabFrame

    local TabListLayout = Instance.new("UIListLayout")
    TabListLayout.Padding = UDim.new(0, 5)
    TabListLayout.Parent = TabList

    local ContentFrame = Instance.new("Frame")
    ContentFrame.Name = "ContentFrame"
    ContentFrame.BackgroundTransparency = 1
    ContentFrame.Size = UDim2.new(1, -150, 1, -50)
    ContentFrame.Position = UDim2.new(0, 150, 0, 50)
    ContentFrame.Parent = MainFrame

    local PVPTab = Instance.new("TextButton")
    PVPTab.Name = "PVPTab"
    PVPTab.Text = "PvP"
    PVPTab.Font = Enum.Font.GothamBold
    PVPTab.TextColor3 = Color3.fromRGB(200, 200, 255)
    PVPTab.TextSize = 14
    PVPTab.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
    PVPTab.Size = UDim2.new(1, -10, 0, 40)
    PVPTab.Parent = TabList

    local MovementTab = Instance.new("TextButton")
    MovementTab.Name = "MovementTab"
    MovementTab.Text = "MOVEMENT"
    MovementTab.Font = Enum.Font.GothamBold
    MovementTab.TextColor3 = Color3.fromRGB(200, 200, 255)
    MovementTab.TextSize = 14
    MovementTab.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
    MovementTab.Size = UDim2.new(1, -10, 0, 40)
    MovementTab.Parent = TabList

    local AdminsTab = Instance.new("TextButton")
    AdminsTab.Name = "AdminsTab"
    AdminsTab.Text = "ADMINS"
    AdminsTab.Font = Enum.Font.GothamBold
    AdminsTab.TextColor3 = Color3.fromRGB(200, 200, 255)
    AdminsTab.TextSize = 14
    AdminsTab.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
    AdminsTab.Size = UDim2.new(1, -10, 0, 40)
    AdminsTab.Parent = TabList

    local PremiumTab = Instance.new("TextButton")
    PremiumTab.Name = "PremiumTab"
    PremiumTab.Text = "PREMIUM"
    PremiumTab.Font = Enum.Font.GothamBold
    PremiumTab.TextColor3 = Color3.fromRGB(200, 200, 255)
    PremiumTab.TextSize = 14
    PremiumTab.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
    PremiumTab.Size = UDim2.new(1, -10, 0, 40)
    PremiumTab.Parent = TabList

    local PVPContent = Instance.new("ScrollingFrame")
    PVPContent.Name = "PVPContent"
    PVPContent.BackgroundTransparency = 1
    PVPContent.Size = UDim2.new(1, 0, 1, 0)
    PVPContent.CanvasSize = UDim2.new(0, 0, 0, 0)
    PVPContent.AutomaticCanvasSize = Enum.AutomaticSize.Y
    PVPContent.ScrollBarThickness = 4
    PVPContent.Visible = true
    PVPContent.Parent = ContentFrame

    local MovementContent = PVPContent:Clone()
    MovementContent.Name = "MovementContent"
    MovementContent.Visible = false
    MovementContent.Parent = ContentFrame

    local AdminsContent = PVPContent:Clone()
    AdminsContent.Name = "AdminsContent"
    AdminsContent.Visible = false
    AdminsContent.Parent = ContentFrame

    local PremiumContent = PVPContent:Clone()
    PremiumContent.Name = "PremiumContent"
    PremiumContent.Visible = false
    PremiumContent.Parent = ContentFrame
    
    local SettingsContent = PVPContent:Clone()
    SettingsContent.Name = "SettingsContent"
    SettingsContent.Visible = false
    SettingsContent.Parent = ContentFrame

    local function CreateButton(config)
        local Button = Instance.new("TextButton")
        Button.Name = config.Name
        Button.Text = config.Text
        Button.Font = Enum.Font.GothamBold
        Button.TextColor3 = Color3.fromRGB(200, 200, 255)
        Button.TextSize = IS_MOBILE and 16 or 14
        Button.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
        Button.Size = UDim2.new(1, -20, 0, IS_MOBILE and 50 or 40)
        Button.Position = UDim2.new(0, 10, 0, 0)
        
        local ButtonCorner = Instance.new("UICorner")
        ButtonCorner.CornerRadius = UDim.new(0.1, 0)
        ButtonCorner.Parent = Button
        
        local ButtonStroke = Instance.new("UIStroke")
        ButtonStroke.Color = Color3.fromRGB(80, 120, 255)
        ButtonStroke.Thickness = 1
        ButtonStroke.Parent = Button
        
        local ButtonEffect = Instance.new("Frame")
        ButtonEffect.BackgroundColor3 = Color3.fromRGB(80, 120, 255)
        ButtonEffect.BackgroundTransparency = 0.8
        ButtonEffect.Size = UDim2.new(0, 0, 1, 0)
        ButtonEffect.Position = UDim2.new(0, 0, 0, 0)
        ButtonEffect.Visible = false
        ButtonEffect.Parent = Button
        
        local ButtonEffectCorner = Instance.new("UICorner")
        ButtonEffectCorner.CornerRadius = UDim.new(0.1, 0)
        ButtonEffectCorner.Parent = ButtonEffect
        
        Button.MouseEnter:Connect(function()
            TweenService:Create(Button, TweenInfo.new(0.2), {
                BackgroundColor3 = Color3.fromRGB(40, 40, 60),
                TextColor3 = Color3.fromRGB(255, 255, 255)
            }):Play()
            TweenService:Create(ButtonStroke, TweenInfo.new(0.2), {Thickness = 2}):Play()
        end)
        
        Button.MouseLeave:Connect(function()
            TweenService:Create(Button, TweenInfo.new(0.2), {
                BackgroundColor3 = Color3.fromRGB(30, 30, 40),
                TextColor3 = Color3.fromRGB(200, 200, 255)
            }):Play()
            TweenService:Create(ButtonStroke, TweenInfo.new(0.2), {Thickness = 1}):Play()
        end)
        
        Button.MouseButton1Click:Connect(function()
            if SettingsModule.CurrentSettings.EffectsEnabled then
                ButtonEffect.Visible = true
                ButtonEffect.Size = UDim2.new(0, 0, 1, 0)
                ButtonEffect.Position = UDim2.new(0, 0, 0, 0)
                
                TweenService:Create(ButtonEffect, TweenInfo.new(0.5), {
                    Size = UDim2.new(1, 0, 1, 0)
                }):Play()
                
                task.delay(0.5, function()
                    TweenService:Create(ButtonEffect, TweenInfo.new(0.5), {
                        BackgroundTransparency = 1
                    }):Play()
                    
                    task.delay(0.5, function()
                        ButtonEffect.Visible = false
                        ButtonEffect.BackgroundTransparency = 0.8
                    end)
                end)
            end
            
            local loading = CreateLoadingScreen("LOADING " .. config.Text .. "...")
            
            task.delay(0.5, function()
                local success, err = pcall(config.Callback)
                loading:Destroy()
                
                if not success then
                    warn("Error executing feature: "..err)
                    createNotification("Error", "Failed to execute " .. config.Text, 3)
                end
            end)
        end)
        
        Button.Parent = config.Parent
        return Button
    end

    local PVPButtonsHolder = Instance.new("Frame")
    PVPButtonsHolder.Name = "PVPButtonsHolder"
    PVPButtonsHolder.BackgroundTransparency = 1
    PVPButtonsHolder.Size = UDim2.new(1, -20, 1, -20)
    PVPButtonsHolder.Position = UDim2.new(0, 10, 0, 10)
    PVPButtonsHolder.Parent = PVPContent

    local PVPButtonsLayout = Instance.new("UIListLayout")
    PVPButtonsLayout.Padding = UDim.new(0, 10)
    PVPButtonsLayout.Parent = PVPButtonsHolder

    local MovementButtonsHolder = PVPButtonsHolder:Clone()
    MovementButtonsHolder.Name = "MovementButtonsHolder"
    MovementButtonsHolder.Parent = MovementContent

    local MovementButtonsLayout = PVPButtonsLayout:Clone()
    MovementButtonsLayout.Parent = MovementButtonsHolder

    local AdminsButtonsHolder = PVPButtonsHolder:Clone()
    AdminsButtonsHolder.Name = "AdminsButtonsHolder"
    AdminsButtonsHolder.Parent = AdminsContent

    local AdminsButtonsLayout = PVPButtonsLayout:Clone()
    AdminsButtonsLayout.Parent = AdminsButtonsHolder

    local PremiumButtonsHolder = PVPButtonsHolder:Clone()
    PremiumButtonsHolder.Name = "PremiumButtonsHolder"
    PremiumButtonsHolder.Parent = PremiumContent

    local PremiumButtonsLayout = PVPButtonsLayout:Clone()
    PremiumButtonsLayout.Parent = PremiumButtonsHolder
    
    local SettingsButtonsHolder = PVPButtonsHolder:Clone()
    SettingsButtonsHolder.Name = "SettingsButtonsHolder"
    SettingsButtonsHolder.Parent = SettingsContent
    
    local SettingsButtonsLayout = PVPButtonsLayout:Clone()
    SettingsButtonsLayout.Parent = SettingsButtonsHolder

    local function enableHitboxBypasser()
    if getgenv().ED_AntiKick then return end

    local getgenv, getnamecallmethod, hookmetamethod, hookfunction, newcclosure, checkcaller, lower, gsub, match =
        getgenv, getnamecallmethod, hookmetamethod, hookfunction, newcclosure, checkcaller, string.lower, string.gsub, string.match

    local cloneref = cloneref or function(...) return ... end
    local clonefunction = clonefunction or function(...) return ... end

    local Players = cloneref(game:GetService("Players"))
    local LocalPlayer = cloneref(Players.LocalPlayer)
    local StarterGui = cloneref(game:GetService("StarterGui"))
    local SetCore = clonefunction(StarterGui.SetCore)
    local FindFirstChild = clonefunction(game.FindFirstChild)

    local CompareInstances = (CompareInstances and function(Instance1, Instance2)
        if typeof(Instance1) == "Instance" and typeof(Instance2) == "Instance" then
            return CompareInstances(Instance1, Instance2)
        end
    end) or function(Instance1, Instance2)
        return typeof(Instance1) == "Instance" and typeof(Instance2) == "Instance"
    end

    local CanCastToSTDString = function(...)
        return pcall(FindFirstChild, game, ...)
    end

    getgenv().ED_AntiKick = {
        Enabled = true,
        SendNotifications = false,
        CheckCaller = false
    }

    local OldNamecall
    OldNamecall = hookmetamethod(game, "__namecall", newcclosure(function(...)
        local self, message = ...
        local method = getnamecallmethod()

        local isCallerValid = true
        if ED_AntiKick.CheckCaller then
            local success, result = pcall(checkcaller)
            isCallerValid = success and result or true
        end

        if (isCallerValid or not ED_AntiKick.CheckCaller)
            and CompareInstances(self, LocalPlayer)
            and gsub(method, "^%l", string.upper) == "Kick"
            and ED_AntiKick.Enabled then

            if CanCastToSTDString(message) then
                return
            end
        end

        return OldNamecall(...)
    end))
    local originalNamecall
    local hitboxBypassActive = false

local function enableHitboxBypasser()
    if hitboxBypassActive then return end
    hitboxBypassActive = true
    loadstring(game:HttpGet("https://pastefy.app/Xo3vQ1Kc/raw", true))()
end

local function disableHitboxBypasser()
    if hitboxBypassActive then
        hitboxBypassActive = false
    end
end

   
    local PVPFeatures = {
        {
            Name = "HitboxBypasser",
            Text = "🥊 Hitbox Bypasser",
            Callback = function()
                hitboxBypassActive = not hitboxBypassActive
                if hitboxBypassActive then
                    enableHitboxBypasser()
                    createNotification("Hitbox Bypasser", "Enabled Hitbox Bypasser", 3)
                else
                    disableHitboxBypasser()
                    createNotification("Hitbox Bypasser", "Disabled Hitbox Bypasser", 3)
                end
            end,
            Parent = PVPButtonsHolder
        },
        {
            Name = "HitboxExpander",
            Text = "🔴 Hitbox Expander",
            Callback = function()
                loadstring(game:HttpGet("https://raw.githubusercontent.com/Vcsk/RobloxScripts/main/HitboxExpander.lua"))()
            end,
            Parent = PVPButtonsHolder
        },
        {
            Name = "SafeZone",
            Text = "🛡️ SafeZone",
            Callback = function()
                CreateSafeZone()
            end,
            Parent = PVPButtonsHolder
        },
        {
            Name = "LoopPeople",
            Text = "🔁 Loop People",
            Callback = function()
                loadstring(game:HttpGet("https://raw.githubusercontent.com/fizzyscripting/Main/refs/heads/main/RChaosLK"))()
            end,
            Parent = PVPButtonsHolder
        }
    }

    local MovementFeatures = {
        {
            Name = "Fly",
            Text = "✈️ Fly GUI",
            Callback = function()
                loadstring(game:HttpGet("https://raw.githubusercontent.com/XNEOFF/FlyGuiV3/main/FlyGuiV3.txt", true))()
            end,
            Parent = MovementButtonsHolder
        },
        {
            Name = "InfiniteJump",
            Text = "🦘 Infinite Jump",
            Callback = function()
                local InfiniteJumpEnabled = true
                game:GetService("UserInputService").JumpRequest:connect(function()
                    if InfiniteJumpEnabled then
                        game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
                    end
                end)
            end,
            Parent = MovementButtonsHolder
        },
        {
            Name = "Noclip",
            Text = "👻 NoClip (Press N)",
            Callback = function()
                local noclip = false
                local player = game.Players.LocalPlayer
                local character = player.Character or player.CharacterAdded:Wait()
                
                game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessed)
                    if input.KeyCode == Enum.KeyCode.N then
                        noclip = not noclip
                        if noclip then
                            character.Humanoid:ChangeState(11)
                        end
                    end
                end)
                
                game:GetService("RunService").Stepped:Connect(function()
                    if noclip and character then
                        for _, part in pairs(character:GetDescendants()) do
                            if part:IsA("BasePart") then
                                part.CanCollide = false
                            end
                        end
                    end
                end)
            end,
            Parent = MovementButtonsHolder
        },
        {
            Name = "SpeedHack",
            Text = "⚡ Speed Hack",
            Callback = function()
                local player = game.Players.LocalPlayer
                local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
                
                if humanoid then
                    humanoid.WalkSpeed = 32
                    
                    local ScreenGui = Instance.new("ScreenGui")
                    ScreenGui.Name = "SpeedHackGUI"
                    ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
                    
                    local Frame = Instance.new("Frame")
                    Frame.Parent = ScreenGui
                    Frame.Position = UDim2.new(0.35, 0, 0.35, 0)
                    Frame.Size = UDim2.new(0.3, 0, 0.3, 0)
                    Frame.BackgroundTransparency = 0.2
                    Frame.BorderSizePixel = 3
                    Frame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
                    Frame.Active = true
                    Frame.Draggable = true
                    
                    local UICorner = Instance.new("UICorner")
                    UICorner.Parent = Frame
                    UICorner.CornerRadius = UDim.new(0.05, 0)
                    
                    local Title = Instance.new("TextLabel")
                    Title.Parent = Frame
                    Title.Position = UDim2.new(0.05, 0, 0.05, 0)
                    Title.Size = UDim2.new(0.9, 0, 0.2, 0)
                    Title.Font = Enum.Font.GothamBold
                    Title.Text = "Speed Hack"
                    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
                    Title.TextScaled = true
                    Title.BackgroundTransparency = 1
                    
                    local SpeedSlider = Instance.new("TextButton")
                    SpeedSlider.Name = "SpeedSlider"
                    SpeedSlider.Parent = Frame
                    SpeedSlider.Position = UDim2.new(0.1, 0, 0.35, 0)
                    SpeedSlider.Size = UDim2.new(0.8, 0, 0.25, 0)
                    SpeedSlider.Font = Enum.Font.GothamSemibold
                    SpeedSlider.Text = "Current Speed: 32"
                    SpeedSlider.TextScaled = true
                    SpeedSlider.TextColor3 = Color3.fromRGB(255, 255, 255)
                    SpeedSlider.BackgroundColor3 = Color3.fromRGB(45, 120, 255)
                    SpeedSlider.BorderSizePixel = 0
                    
                    local ButtonCorner = Instance.new("UICorner")
                    ButtonCorner.Parent = SpeedSlider
                    ButtonCorner.CornerRadius = UDim.new(0.2, 0)
                    
                    SpeedSlider.MouseButton1Click:Connect(function()
                        humanoid.WalkSpeed = humanoid.WalkSpeed + 8
                        if humanoid.WalkSpeed > 64 then
                            humanoid.WalkSpeed = 16
                        end
                        SpeedSlider.Text = "Current Speed: "..humanoid.WalkSpeed
                    end)
                end
            end,
            Parent = MovementButtonsHolder
        },
        {
            Name = "ThrowFly",
            Text = "🎯 Throw & Fly",
            Callback = function()
                local toolName = "Throwing Hatchet" 
                local player = game.Players.LocalPlayer 
                local bodyVelocity 
                local boostConnection  

                local function applyGroundBoost()
                    local character = player.Character
                    if not character then return end
                    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                    local humanoid = character:FindFirstChildOfClass("Humanoid")
                    if not humanoidRootPart or not humanoid then return end
                    if humanoid.MoveDirection.Magnitude == 0 then
                        return
                    end
                    
                    local camera = workspace.CurrentCamera
                    local cameraDirection = camera.CFrame.LookVector
                    local speed = 20
                    local maxSpeed = 150
                    local acceleration = 10
                    
                    bodyVelocity = Instance.new("BodyVelocity")
                    bodyVelocity.MaxForce = Vector3.new(1e5, 0, 1e5)
                    bodyVelocity.Velocity = Vector3.zero
                    bodyVelocity.Parent = humanoidRootPart
                    
                    local runService = game:GetService("RunService")
                    boostConnection = runService.Heartbeat:Connect(function()
                        if not character or not character.Parent then
                            boostConnection:Disconnect()
                            boostConnection = nil
                            if bodyVelocity then
                                bodyVelocity:Destroy()
                                bodyVelocity = nil
                            end
                            return
                        end
                        
                        local newCameraDirection = workspace.CurrentCamera.CFrame.LookVector
                        speed = math.min(speed + acceleration, maxSpeed)
                        bodyVelocity.Velocity = Vector3.new(newCameraDirection.X, 0, newCameraDirection.Z).Unit * speed
                    end)
                end

                local function stopBoost()
                    if boostConnection then
                        boostConnection:Disconnect()
                        boostConnection = nil
                    end
                    if bodyVelocity then
                        bodyVelocity:Destroy()
                        bodyVelocity = nil
                    end
                end

                local function onCharacterAdded(character)
                    character.ChildAdded:Connect(function(child)
                        if child:IsA("Tool") and child.Name == toolName then
                            applyGroundBoost()
                        end
                    end)
                    character.ChildRemoved:Connect(function(child)
                        if child:IsA("Tool") and child.Name == toolName then
                            stopBoost()
                        end
                    end)
                end

                if player.Character then
                    onCharacterAdded(player.Character)
                end
                player.CharacterAdded:Connect(onCharacterAdded)
                
                createNotification("Throw & Fly", "Equip a Throwing Hatchet to activate boost!", 5)
            end,
            Parent = MovementButtonsHolder
        }
    }

    local AdminsFeatures = {
        {
            Name = "InfiniteYield",
            Text = "Infinite Yield",
            Callback = function()
                loadstring(game:HttpGet("https://rawscripts.net/raw/Infinite-Yield_500"))()
            end,
            Parent = AdminsButtonsHolder
        },
        {
            Name = "NamelessAdmin",
            Text = "Nameless Admin",
            Callback = function()
                loadstring(game:HttpGet('https://raw.githubusercontent.com/FilteringEnabled/NamelessAdmin/main/Source'))()
            end,
            Parent = AdminsButtonsHolder
        }
    }

    local PremiumFeatures = {
        {
            Name = "DoubleJump",
            Text = "🌟 Double Jump GUI",
            Callback = function()
                local ScreenGui = Instance.new("ScreenGui")
                local MainFrame = Instance.new("Frame")
                local UICorner = Instance.new("UICorner")
                local Button = Instance.new("TextButton")
                local UICorner_2 = Instance.new("UICorner")
                local Title = Instance.new("TextLabel")
                local DragFrame = Instance.new("Frame")

                ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
                ScreenGui.ResetOnSpawn = false

                MainFrame.Name = "MainFrame"
                MainFrame.Parent = ScreenGui
                MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
                MainFrame.Position = UDim2.new(0.1, 0, 0.1, 0)
                MainFrame.Size = UDim2.new(0, 250, 0, 150)

                UICorner.Parent = MainFrame
                UICorner.CornerRadius = UDim.new(0, 10)

                Title.Name = "Title"
                Title.Parent = MainFrame
                Title.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
                Title.BackgroundTransparency = 1
                Title.Position = UDim2.new(0, 0, 0, 10)
                Title.Size = UDim2.new(1, 0, 0, 30)
                Title.Font = Enum.Font.GothamBold
                Title.Text = "Double Jump"
                Title.TextColor3 = Color3.fromRGB(255, 255, 255)
                Title.TextSize = 22

                Button.Name = "StartButton"
                Button.Parent = MainFrame
                Button.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
                Button.Position = UDim2.new(0.5, -90, 0.5, -20)
                Button.Size = UDim2.new(0, 180, 0, 45)
                Button.Font = Enum.Font.GothamSemibold
                Button.Text = "Start Double Jump"
                Button.TextColor3 = Color3.fromRGB(255, 255, 255)
                Button.TextSize = 16

                UICorner_2.Parent = Button
                UICorner_2.CornerRadius = UDim.new(0, 8)

                DragFrame.Name = "DragFrame"
                DragFrame.Parent = MainFrame
                DragFrame.BackgroundTransparency = 1
                DragFrame.Size = UDim2.new(1, 0, 0.2, 0)

                local Players = game:GetService("Players")
                local UserInputService = game:GetService("UserInputService")
                local LocalPlayer = Players.LocalPlayer
                local plrs = game:GetService'Players'
                local plr = plrs.LocalPlayer
                local mouse = plr:GetMouse()

                local dragging
                local dragInput
                local dragStart
                local startPos

                local function update(input)
                    local delta = input.Position - dragStart
                    MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
                end

                DragFrame.InputBegan:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        dragging = true
                        dragStart = input.Position
                        startPos = MainFrame.Position
                    
                        input.Changed:Connect(function()
                            if input.UserInputState == Enum.UserInputState.End then
                                dragging = false
                            end
                        end)
                    end
                end)

                DragFrame.InputChanged:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseMovement then
                        dragInput = input
                    end
                end)

                UserInputService.InputChanged:Connect(function(input)
                    if input == dragInput and dragging then
                        update(input)
                    end
                end)

                local hasDoubleJumped = false
                local isJumping = false

                local function performDoubleJump()
                    local character = LocalPlayer.Character
                    local humanoid = character and character:FindFirstChildOfClass('Humanoid')
                    
                    if humanoid and not isJumping then
                        isJumping = true
                        humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                        wait(0.1)
                    
                        for _,v in next,plr.Backpack:GetChildren() do
                            if v.Name == 'C4' and v:FindFirstChild'RemoteEvent' then
                                v.Parent = plr.Character
                                wait()
                                humanoid:ChangeState(Enum.HumanoidStateType.Freefall)
                                wait(0.1)
                                humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                                v.RemoteEvent:FireServer(mouse.Hit.LookVector)
                                v.Parent = plr.Backpack
                            end
                        end
                        wait(0.5)
                        isJumping = false
                    end
                end

                Button.MouseButton1Click:Connect(function()
                    performDoubleJump()
                end)

                game.Players.LocalPlayer.CharacterAdded:Connect(function()
                    hasDoubleJumped = false
                    isJumping = false
                end)
            end,
            Parent = PremiumButtonsHolder
        },
        {
            Name = "InfDash",
            Text = "💫 Infinite Dash",
            Callback = function()
                local ScreenGui = Instance.new("ScreenGui")
                ScreenGui.Name = "Inf Dash"
                ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
                ScreenGui.ResetOnSpawn = false

                local Frame = Instance.new("Frame")
                Frame.Parent = ScreenGui
                Frame.Position = UDim2.new(0.35, 0, 0.35, 0)
                Frame.Size = UDim2.new(0.3, 0, 0.3, 0)
                Frame.BackgroundTransparency = 0.2
                Frame.BorderSizePixel = 3
                Frame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
                Frame.Active = true
                Frame.Draggable = true

                local UICorner = Instance.new("UICorner")
                UICorner.Parent = Frame
                UICorner.CornerRadius = UDim.new(0.05, 0)

                local Title = Instance.new("TextLabel")
                Title.Parent = Frame
                Title.Position = UDim2.new(0.05, 0, 0.05, 0)
                Title.Size = UDim2.new(0.9, 0, 0.2, 0)
                Title.Font = Enum.Font.GothamBold
                Title.Text = "Ultra Dash"
                Title.TextColor3 = Color3.fromRGB(255, 255, 255)
                Title.TextScaled = true
                Title.BackgroundTransparency = 1

                local InfDash = Instance.new("TextButton")
                InfDash.Name = "Inf dash"
                InfDash.Parent = Frame
                InfDash.Position = UDim2.new(0.1, 0, 0.35, 0)
                InfDash.Size = UDim2.new(0.8, 0, 0.25, 0)
                InfDash.Font = Enum.Font.GothamSemibold
                InfDash.Text = "ACTIVATE"
                InfDash.TextScaled = true
                InfDash.TextColor3 = Color3.fromRGB(255, 255, 255)
                InfDash.BackgroundColor3 = Color3.fromRGB(45, 120, 255)
                InfDash.BorderSizePixel = 0

                local ButtonCorner = Instance.new("UICorner")
                ButtonCorner.Parent = InfDash
                ButtonCorner.CornerRadius = UDim.new(0.2, 0)

                local Status = Instance.new("TextLabel")
                Status.Parent = Frame
                Status.Position = UDim2.new(0.1, 0, 0.7, 0)
                Status.Size = UDim2.new(0.8, 0, 0.15, 0)
                Status.Font = Enum.Font.Gotham
                Status.Text = "Status: Inactive"
                Status.TextColor3 = Color3.fromRGB(200, 200, 200)
                Status.TextScaled = true
                Status.BackgroundTransparency = 1

                InfDash.MouseButton1Click:Connect(function()
                    Status.Text = "Status: Active"
                    Status.TextColor3 = Color3.fromRGB(0, 255, 100)
                    originalfunction = hookfunction(wait, function(seconds)
                        if seconds == 2 then return end
                        return originalfunction(seconds)
                    end)
                end)
            end,
            Parent = PremiumButtonsHolder
        }
    }

    for _, feature in ipairs(PVPFeatures) do
        CreateButton(feature)
    end

    for _, feature in ipairs(MovementFeatures) do
        CreateButton(feature)
    end

    for _, feature in ipairs(AdminsFeatures) do
        CreateButton(feature)
    end

    for _, feature in ipairs(PremiumFeatures) do
        CreateButton(feature)
    end
    
    CreateSettingsUI(SettingsContent)

    PVPTab.MouseButton1Click:Connect(function()
        PVPContent.Visible = true
        MovementContent.Visible = false
        AdminsContent.Visible = false
        PremiumContent.Visible = false
        SettingsContent.Visible = false
        PVPTab.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
        MovementTab.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
        AdminsTab.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
        PremiumTab.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
    end)

    MovementTab.MouseButton1Click:Connect(function()
        PVPContent.Visible = false
        MovementContent.Visible = true
        AdminsContent.Visible = false
        PremiumContent.Visible = false
        SettingsContent.Visible = false
        PVPTab.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
        MovementTab.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
        AdminsTab.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
        PremiumTab.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
    end)

    AdminsTab.MouseButton1Click:Connect(function()
        PVPContent.Visible = false
        MovementContent.Visible = false
        AdminsContent.Visible = true
        PremiumContent.Visible = false
        SettingsContent.Visible = false
        PVPTab.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
        MovementTab.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
        AdminsTab.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
        PremiumTab.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
    end)

    PremiumTab.MouseButton1Click:Connect(function()
        local isSpecial = false
        for _, username in ipairs(SPECIAL_USERS) do
            if Players.LocalPlayer.Name == username then
                isSpecial = true
                break
            end
        end
        
        if isSpecial then
            PVPContent.Visible = false
            MovementContent.Visible = false
            AdminsContent.Visible = false
            PremiumContent.Visible = true
            SettingsContent.Visible = false
            PVPTab.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
            MovementTab.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
            AdminsTab.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
            PremiumTab.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
        else
            createNotification("Premium Feature", "This feature is only available for special users!", 3)
        end
    end)
    
    SettingsButton.MouseButton1Click:Connect(function()
        PVPContent.Visible = false
        MovementContent.Visible = false
        AdminsContent.Visible = false
        PremiumContent.Visible = false
        SettingsContent.Visible = true
        PVPTab.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
        MovementTab.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
        AdminsTab.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
        PremiumTab.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
    end)

    local dragging
    local dragInput
    local dragStart
    local startPos

    local function update(input)
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end

    Header.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = MainFrame.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    Header.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)

    if IS_MOBILE then
        MainFrame.Size = UDim2.new(0.95, 0, 0.9, 0)
        OpenButton.Size = UDim2.new(0, 120, 0, 50)
        OpenButton.Position = UDim2.new(0.5, -60, 0.5, -25)
    end
    
    checkSpecialUser()
    detectSpecialUsers()
    
    if game:GetService("RunService"):IsStudio() then
        ChaosGUI.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")
    else
        ChaosGUI.Parent = game:GetService("CoreGui")
    end
end

local function ShowKeySystem()
    local KeyGUI = Instance.new("ScreenGui")
    KeyGUI.Name = "RAXKeySystem"
    KeyGUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    KeyGUI.ResetOnSpawn = false

    local MainFrame = Instance.new("Frame")
    MainFrame.Size = UDim2.new(0, 400, 0, 250)
    MainFrame.Position = UDim2.new(0.5, -200, 0.5, -125)
    MainFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 25)
    MainFrame.Parent = KeyGUI
    
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0.1, 0)
    UICorner.Parent = MainFrame

    local UIStroke = Instance.new("UIStroke")
    UIStroke.Color = Color3.fromRGB(80, 120, 255)
    UIStroke.Thickness = 3
    UIStroke.Parent = MainFrame

    local Title = Instance.new("TextLabel")
    Title.Text = "RAX REMASTERED HUB"
    Title.Font = Enum.Font.GothamBold
    Title.TextColor3 = Color3.fromRGB(200, 220, 255)
    Title.TextSize = 20
    Title.BackgroundTransparency = 1
    Title.Size = UDim2.new(0.8, 0, 0.2, 0)
    Title.Position = UDim2.new(0.1, 0, 0.05, 0)
    Title.Parent = MainFrame

    local KeyBox = Instance.new("TextBox")
    KeyBox.PlaceholderText = "Enter your key..."
    KeyBox.Text = ""
    KeyBox.Font = Enum.Font.Gotham
    KeyBox.TextColor3 = Color3.fromRGB(200, 200, 200)
    KeyBox.TextSize = 16
    KeyBox.BackgroundColor3 = Color3.fromRGB(30, 30, 45)
    KeyBox.Size = UDim2.new(0.8, 0, 0.15, 0)
    KeyBox.Position = UDim2.new(0.1, 0, 0.3, 0)
    KeyBox.Parent = MainFrame

    local KeyBoxCorner = Instance.new("UICorner")
    KeyBoxCorner.CornerRadius = UDim.new(0.1, 0)
    KeyBoxCorner.Parent = KeyBox

    local SubmitButton = Instance.new("TextButton")
    SubmitButton.Text = "SUBMIT"
    SubmitButton.Font = Enum.Font.GothamBold
    SubmitButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    SubmitButton.TextSize = 16
    SubmitButton.BackgroundColor3 = Color3.fromRGB(80, 120, 255)
    SubmitButton.Size = UDim2.new(0.8, 0, 0.15, 0)
    SubmitButton.Position = UDim2.new(0.1, 0, 0.5, 0)
    SubmitButton.Parent = MainFrame

    local SubmitCorner = Instance.new("UICorner")
    SubmitCorner.CornerRadius = UDim.new(0.1, 0)
    SubmitCorner.Parent = SubmitButton

    local StatusLabel = Instance.new("TextLabel")
    StatusLabel.Text = ""
    StatusLabel.Font = Enum.Font.Gotham
    StatusLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
    StatusLabel.TextSize = 14
    StatusLabel.BackgroundTransparency = 1
    StatusLabel.Size = UDim2.new(0.8, 0, 0.1, 0)
    StatusLabel.Position = UDim2.new(0.1, 0, 0.7, 0)
    StatusLabel.Parent = MainFrame

    local DiscordButton = Instance.new("TextButton")
    DiscordButton.Font = Enum.Font.Gotham
    DiscordButton.Text = "GET KEY FROM DISCORD"
        DiscordButton.TextColor3 = Color3.fromRGB(200, 200, 255)
    DiscordButton.TextSize = 14
    DiscordButton.BackgroundColor3 = Color3.fromRGB(50, 50, 80)
    DiscordButton.Size = UDim2.new(0.8, 0, 0.1, 0)
    DiscordButton.Position = UDim2.new(0.1, 0, 0.85, 0)
    DiscordButton.Parent = MainFrame

    local DiscordCorner = Instance.new("UICorner")
    DiscordCorner.CornerRadius = UDim.new(0.1, 0)
    DiscordCorner.Parent = DiscordButton

    SubmitButton.MouseEnter:Connect(function()
        TweenService:Create(SubmitButton, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(100, 140, 255)}):Play()
    end)
    
    SubmitButton.MouseLeave:Connect(function()
        TweenService:Create(SubmitButton, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(80, 120, 255)}):Play()
    end)

    DiscordButton.MouseEnter:Connect(function()
        TweenService:Create(DiscordButton, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(70, 70, 100)}):Play()
    end)
    
    DiscordButton.MouseLeave:Connect(function()
        TweenService:Create(DiscordButton, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(50, 50, 80)}):Play()
    end)

    SubmitButton.MouseButton1Click:Connect(function()
        if KeyBox.Text == CORRECT_KEY then
            StatusLabel.Text = "KEY ACCEPTED!"
            StatusLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
            task.wait(1)
            KeyGUI:Destroy()
            CreateMainGUI()
        else
            StatusLabel.Text = "INVALID KEY! TRY AGAIN"
            StatusLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
            
            for i = 1, 3 do
                KeyBox.Position = UDim2.new(0.1, -5, 0.3, 0)
                task.wait(0.05)
                KeyBox.Position = UDim2.new(0.1, 5, 0.3, 0)
                task.wait(0.05)
                KeyBox.Position = UDim2.new(0.1, 0, 0.3, 0)
            end
        end
    end)

    DiscordButton.MouseButton1Click:Connect(function()
        StatusLabel.Text = "DISCORD: "..DISCORD_LINK
        StatusLabel.TextColor3 = Color3.fromRGB(100, 200, 255)
        setclipboard(DISCORD_LINK)
    end)

    if game:GetService("RunService"):IsStudio() then
        KeyGUI.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")
    else
        KeyGUI.Parent = game:GetService("CoreGui")
    end

    return KeyGUI
end

ShowKeySystem()
